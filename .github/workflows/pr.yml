name: PR

on:
  pull_request:
    branches:
      - 'feature/ci-testing'
    # paths:
    #   - 'client/**'
    #   - 'microservice/**'
    #   - 'cli/**'

jobs:
  testAllModes:
    timeout-minutes: 30
    name: Tests ${{ matrix.unityVersion }} ${{ matrix.testMode }}
    runs-on: ubuntu-latest
    concurrency:
      group: unity-tests-${{ matrix.unityVersion }}-${{ matrix.testMode }}-${{ github.head_ref }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        projectPath:
          - ./
        testMode:
          - playmode
          - editmode
        unityVersion:
          - 2020.3.19f1
          - 2021.3.2f1
        include:
          - unityVersion: 2020.3.19f1
            unityEmailOverride: UNITY_EMAIL_DEVOPS
            unityPasswordOverride: UNITY_PASSWORD_DEVOPS
            unitySerialOverride: UNITY_SERIAL_DEVOPS
          - unityVersion: 2021.3.2f1
            unityEmailOverride: UNITY_EMAIL_BUILD
            unityPasswordOverride: UNITY_PASSWORD_BUILD
            unitySerialOverride: UNITY_SERIAL_BUILD
    steps:
      - uses: actions/checkout@v2
      - name: Cache Unity Folders
        uses: actions/cache@v2
        with:
          path: ${{ matrix.projectPath }}/Library
          key: Library-${{ matrix.projectPath }}-${{ matrix.unityVersion }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.unityVersion }}
      - uses: game-ci/unity-test-runner@v2
        id: tests
        timeout-minutes: 30
        env:
          UNITY_EMAIL: ${{ secrets[matrix.unityEmailOverride] || secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets[matrix.unityPasswordOverride] || secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets[matrix.unitySerialOverride] || secrets.UNITY_SERIAL }}
        with:
          customParameters: -warnaserror+
          projectPath: ${{ matrix.projectPath }}
          testMode: ${{ matrix.testMode }}
          unityVersion: ${{ matrix.unityVersion }}
          artifactsPath: ${{ matrix.testMode }}-${{ matrix.unityVersion }}-artifacts
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          checkName: ${{ matrix.unityVersion }} ${{ matrix.testMode }} Test Results

  build:
    name: Build for ${{ matrix.targetPlatform }}
    runs-on: ubuntu-latest
    timeout-minutes: 60
    concurrency:
      group: device-builds-${{ matrix.targetPlatform }}-${{ github.head_ref }}
      cancel-in-progress: true
    strategy:
      fail-fast: false
      matrix:
        targetPlatform:
          - WebGL
          - Android
          - StandaloneWindows
          - StandaloneOSX
        unityVersion:
          - 2021.3.2f1
        projectPath:
          - client
        include:
          - targetPlatform: Android
            unityEmailOverride: UNITY_EMAIL_DEVOPS
            unityPasswordOverride: UNITY_PASSWORD_DEVOPS
            unitySerialOverride: UNITY_SERIAL_DEVOPS
          - targetPlatform: StandaloneOSX
            unityEmailOverride: UNITY_EMAIL_BUILD
            unityPasswordOverride: UNITY_PASSWORD_BUILD
            unitySerialOverride: UNITY_SERIAL_BUILD
    steps:
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
          lfs: true
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Prepare Config-Defaults
        run: |
          chmod +x ./build/create_config_defaults.sh
          ./build/create_config_defaults.sh
        shell: bash
      - name: Cache Unity Folders
        uses: actions/cache@v2
        with:
          path: |
            ${{ matrix.projectPath }}/Library
            ${{ matrix.projectPath }}/Temp
            ${{ matrix.projectPath }}/obj
          key: Library-${{ matrix.projectPath }}-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}
          restore-keys: |
            Library-${{ matrix.projectPath }}-${{ matrix.unityVersion }}-${{ matrix.targetPlatform }}
      - name: Clean the build directory
        continue-on-error: true
        run: |
          rm -rf /github/workspace/dist
        shell: bash
      - uses: game-ci/unity-builder@v2.0.4
        timeout-minutes: 30
        env:
          UNITY_EMAIL: ${{ secrets[matrix.unityEmailOverride] || secrets.UNITY_EMAIL }}
          UNITY_PASSWORD: ${{ secrets[matrix.unityPasswordOverride] || secrets.UNITY_PASSWORD }}
          UNITY_SERIAL: ${{ secrets[matrix.unitySerialOverride] || secrets.UNITY_SERIAL }}
        with:
          targetPlatform: ${{ matrix.targetPlatform }}
          unityVersion: ${{ matrix.unityVersion }}
          projectPath: ${{ matrix.projectPath }}
          githubToken: ${{ secrets.GITHUB_TOKEN }}
          versioning: Custom
          version: 1.2.0
          androidVersionCode: ${{ github.run_number }}
          allowDirtyBuild: true
          buildsPath: dist
          buildMethod: BuildSampleProject.Development