//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Beamable.Server.Clients
{
    using System;
    using Beamable.Platform.SDK;
    using Beamable.Server;
    
    
    /// <summary> A generated client for <see cref="Beamable.Microservices.SolanaFederation"/> </summary
    public sealed class SolanaFederationClient : MicroserviceClient
    {
        
        public SolanaFederationClient(BeamContext context = null) : 
                base(context)
        {
        }
        
        /// <summary>
        /// Call the Authenticate method on the SolanaFederation microservice
        /// <see cref="Beamable.Microservices.SolanaFederation.Authenticate"/>
        /// </summary>
        public Beamable.Common.Promise<ExternalAuthenticationResponse> Authenticate(string token, string challenge, string solution)
        {
            string serialized_token = this.SerializeArgument<string>(token);
            string serialized_challenge = this.SerializeArgument<string>(challenge);
            string serialized_solution = this.SerializeArgument<string>(solution);
            string[] serializedFields = new string[] {
                    serialized_token,
                    serialized_challenge,
                    serialized_solution};
            return this.Request<ExternalAuthenticationResponse>("SolanaFederation", "authenticate", serializedFields);
        }
    }
    
    internal sealed class MicroserviceParametersSolanaFederationClient
    {
        
        [System.SerializableAttribute()]
        internal sealed class ParameterSystem_String : MicroserviceClientDataWrapper<string>
        {
        }
    }
    
    [BeamContextSystemAttribute()]
    public static class ExtensionsForSolanaFederationClient
    {
        
        [Beamable.Common.Dependencies.RegisterBeamableDependenciesAttribute()]
        public static void RegisterService(Beamable.Common.Dependencies.IDependencyBuilder builder)
        {
            builder.AddScoped<SolanaFederationClient>();
        }
        
        public static SolanaFederationClient SolanaFederation(this Beamable.Server.MicroserviceClients clients)
        {
            return clients.GetClient<SolanaFederationClient>();
        }
    }
}
